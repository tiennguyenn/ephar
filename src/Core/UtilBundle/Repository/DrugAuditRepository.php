<?php

namespace UtilBundle\Repository;

use Doctrine\ORM\EntityRepository;
use UtilBundle\Utility\Constant;

/**
 * DrugAuditRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DrugAuditRepository extends EntityRepository
{
    public function listLogs($params)
    {
        $startDate = new \DateTime();
        $endDate = $startDate;
        $year = date('Y');
        $month = date("n");
        switch ($month) {
            case 1:
            case 2:
                $year -= 1;
                $month += 10;
                $endDate = new \DateTime("$year-$month-01 00:00:00");
                break;
            default:
                $month -= 2;
                $month = $month < 10 ? "0" . $month : $month;
                $endDate = new \DateTime("$year-$month-01 00:00:00");
                break;
        }

    	$qb = $this->createQueryBuilder('da');
        
        if (isset($params['pharmacy_id']) && $params['pharmacy_id']) {
            $qb->leftJoin('UtilBundle:Drug', 'd', 'WITH', 'da.drug = d.id');
            $qb->where($qb->expr()->orX(
                $qb->expr()->eq('da.pharmacy', ':daPharmacyId'),
                $qb->expr()->eq('d.pharmacy', ':dPharmacyId')
                ))
                ->setParameter('daPharmacyId', $params['pharmacy_id'])
                ->setParameter('dPharmacyId', $params['pharmacy_id']);
        }
        
        $qb->andWhere($qb->expr()->lte('da.createdOn', ':startDate'))
            ->andWhere($qb->expr()->gte('da.createdOn', ':endDate'))
            ->setParameter('startDate', $startDate)
            ->setParameter('endDate', $endDate);

        $result = $qb->select('da')
                    ->addOrderBy("da.createdOn", "desc")
                    ->getQuery()
                    ->execute();

        return $result;
    }
    
    public function listDrugAudit($params)
    {
    	$qb = $this->createQueryBuilder('da');
            
        if (isset($params['status'])) {
            $qb->andWhere($qb->expr()->eq('da.status', ':status'))
                ->setParameter('status', $params['status']);
        }
        
        if (isset($params['take_effect_on'])) {
            $qb->andWhere($qb->expr()->lte('da.takeEffectOn', ':takeEffectOn'))
                ->setParameter('takeEffectOn', $params['take_effect_on']);
        }
        
        $result = $qb->select('da')
                    ->getQuery()
                    ->execute();

        return $result;
    }

    public function listDoctorDrug($params)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder()
            ->from('UtilBundle:DoctorDrug', 'da');

        if (isset($params['take_effect_on'])) {
            $qb->andWhere($qb->expr()->lte('da.effectiveDate', ':takeEffectOn'))
                ->setParameter('takeEffectOn', $params['take_effect_on']);
        }

        $result = $qb->select('da')
                    ->getQuery()
                    ->execute();

        return $result;
    }
}
