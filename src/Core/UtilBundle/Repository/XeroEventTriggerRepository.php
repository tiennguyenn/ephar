<?php

namespace UtilBundle\Repository;

/**
 * XeroEventTriggerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class XeroEventTriggerRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * get list batches
     * @param  Request $request
     * @author Bien
     * @return array
     */
    public function getListData($request)
    {
        $limit = $request->get('length', '');
        $sort = $request->get('sort', array());
        $ofset = $request->get('page', 1);
        $query = $this->createQueryBuilder('a');
        $this->generateSort($query, $sort);

        $totalResult = count($query->getQuery()->getResult());
        $query->setMaxResults($limit)
            ->setFirstResult(($ofset - 1) * $limit);
        $records = $query->getQuery()->getResult();
        $data = array();
        foreach ($records as $obj) {

            array_push($data, array(
                    'id' => $obj->getId(),
                    'name' => $obj->getName(),
                    'code' => $obj->getCode(),
                )
            );
        }

        return array('data' => $data, 'total' => $totalResult);
    }
    private function generateSort($em, $data) {
        foreach ($data as $key => $value) {
            switch ($key) {
                case 'name':
                    $em->orderBy("a.name", $value);
                    break;
                case 'code':
                    $em->orderBy("a.code", $value);
                    break;


            }
        }
    }
}
