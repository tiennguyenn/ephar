<?php

namespace UtilBundle\Repository;

use Doctrine\ORM\EntityRepository;
use UtilBundle\Entity\AuditTrailPrice;
use \DateTime;
use UtilBundle\Utility\Constant;

/**
 * AuditTrailPriceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AuditTrailPriceRepository extends EntityRepository
{
    /**
     * update
     * @param type $params
     */
    public function insert($params) {
        try
        {
            $auditTrailPrice = new AuditTrailPrice();
            $auditTrailPrice->setTableName($params['tableName']);
            $auditTrailPrice->setFieldName($params['fieldName']);
            $auditTrailPrice->setEntityId($params['entityId']);
            $auditTrailPrice->setOldPrice($params['oldPrice']);
            $auditTrailPrice->setNewPrice($params['newPrice']);
            $auditTrailPrice->setCreatedBy($params['createdBy']);

            if (isset($params['effectedOn'])) {
                $auditTrailPrice->setEffectedOn($params['effectedOn']);
            }

            $auditTrailPrice->setCreatedOn(new DateTime("now"));
            $em = $this->getEntityManager();
            $em->persist($auditTrailPrice);
            $em->flush();
            return $auditTrailPrice->getId();
        }
        catch (\Exception $e)
        {
            return false;
        }
    }

    /**
     * Get last item
     * @param
     */
    public function getLastItem() {
        $queryBuilder = $this->createQueryBuilder('a');
        $queryBuilder->select('a')
                    ->orderBy("a.id", "DESC")
                    ->setMaxResults(1);
        return $queryBuilder->getQuery()->getOneOrNullResult();
    }
}