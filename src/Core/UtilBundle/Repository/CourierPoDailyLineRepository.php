<?php

namespace UtilBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use DoctrineExtensions\Query;
use UtilBundle\Entity\CourierPoDaily;
use UtilBundle\Entity\CourierPoDailyLine;
use UtilBundle\Utility\Common;
use UtilBundle\Utility\Constant;

/**
 * CourierPoDailyLineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourierPoDailyLineRepository extends EntityRepository
{
    /**
     * create new
     * @author vinh.nguyen
     */
    public function create($params)
    {
        $codLineObj = new CourierPoDailyLine();
        $codLineObj->setBox($params['box']);
        $codLineObj->setPoDaily($params['poDaily']);
        $codLineObj->setCreatedOn(new \DateTime());

        $em = $this->getEntityManager();
        $em->persist($codLineObj);
        $em->flush();

        return $codLineObj->getId();
    }

    /**
     * create list daily line
     * @author vinh.nguyen
     */
    public function createListBy($dailyObj, $listBox)
    {
        $result = array();
        if(!empty($listBox)) {
            foreach($listBox as $box) {
                $result[] = $this->create(array(
                    'box'     => $this->getEntityManager()->getRepository('UtilBundle:Box')->find($box['boxId']),
                    'poDaily' => $dailyObj
                ));
            }
        }

        return $result;
    }
    
    /**
     * update
     * @author vinh.nguyen
     */
    public function update($id, $poDailyObj)
    {
        $codLineObj = $this->find($id);
        if( null == $codLineObj )
            return null;

        $codLineObj->setPoDaily($poDailyObj);

        $em = $this->getEntityManager();
        $em->persist($codLineObj);
        $em->flush();

        return $codLineObj->getId();
    }
}